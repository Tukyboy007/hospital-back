-- ================================================
--  üîß Extensions
-- ================================================
CREATE EXTENSION IF NOT EXISTS "pgcrypto";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ================================================
--  üßë‚Äç‚öïÔ∏è Doctor Users (Main User Table)
-- ================================================
CREATE TABLE IF NOT EXISTS public.doctor_user (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    doctor_id BIGSERIAL UNIQUE NOT NULL,
    rank_name TEXT,
    first_name TEXT,
    last_name TEXT,
    org_name TEXT,
    org_id INT4 NOT NULL,
    reg_no TEXT UNIQUE NOT NULL,
    position TEXT,
    birth_date DATE,
    gender TEXT,
    doctor_roll INT4,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    password_hash TEXT NOT NULL,
    is_active BOOL NOT NULL DEFAULT FALSE
);

-- –ò–Ω–¥–µ–∫—Å“Ø“Ø–¥
CREATE INDEX IF NOT EXISTS idx_doctor_user_org_id ON public.doctor_user (org_id);
CREATE INDEX IF NOT EXISTS idx_doctor_user_reg_no ON public.doctor_user (reg_no);
CREATE INDEX IF NOT EXISTS idx_doctor_user_active ON public.doctor_user (is_active);

-- ================================================
--  üß† Doctor Roles
-- ================================================
CREATE TABLE IF NOT EXISTS public.doctor_rolls (
    roll_id INT4 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    roll_name TEXT NOT NULL UNIQUE
);

-- Seed roles
INSERT INTO public.doctor_rolls (roll_name)
VALUES
    ('admin'),
    ('senior'),
    ('junior'),
    ('viewer')
ON CONFLICT DO NOTHING;

-- ================================================
--  üì¶ Items (Owned by doctor_user)
-- ================================================
CREATE TABLE IF NOT EXISTS public.items (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    owner_id UUID NOT NULL REFERENCES public.doctor_user(id) ON DELETE CASCADE,
    title TEXT NOT NULL,
    description TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- ================================================
--  üîë Refresh Tokens
-- ================================================
-- Refresh tokens (rotation + revoke)
CREATE TABLE IF NOT EXISTS public.refresh_tokens (
    id BIGSERIAL PRIMARY KEY,
    doctor_id UUID NOT NULL REFERENCES doctor_user(id) ON DELETE CASCADE,
    jti TEXT UNIQUE NOT NULL,
    token_hash TEXT NOT NULL,
    expires_at TIMESTAMPTZ NOT NULL,
    revoked BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- ================================================
-- ‚úÖ Indexes for performance
-- ================================================
CREATE INDEX IF NOT EXISTS idx_refresh_tokens_doctor_id ON public.refresh_tokens (doctor_id);
CREATE INDEX IF NOT EXISTS idx_refresh_tokens_jti ON public.refresh_tokens (jti);
CREATE INDEX IF NOT EXISTS idx_refresh_tokens_expires_at ON public.refresh_tokens (expires_at);
